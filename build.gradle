plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.docfinity-cds'
version = System.getenv("VERSION")?.trim()?.substring(1) ?: '3.0-SNAPSHOT'
ext.isReleaseVersion = !version.endsWith('-SNAPSHOT')

java {
	sourceCompatibility = 17
	targetCompatibility = 17
    base {
        archivesName = 'dom4future'
    }
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
    options.charSet = options.encoding
}

repositories {
    mavenCentral()
}

dependencies {

    implementation(
            'jaxen:jaxen:1.1.6',
            'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2',
            'net.java.dev.msv:xsdlib:2022.7',
            'pull-parser:pull-parser:2.1.10',
            'xpp3:xpp3:1.1.4c',
    )

    testImplementation(
            'org.testng:testng:7.10.2',

            'xerces:xercesImpl:2.12.2',
            'xalan:xalan:2.7.3',
            'xalan:serializer:2.7.3'
    )
}


jar {
    manifest {
        attributes('Automatic-Module-Name': 'org.dom4j')
    }
}

test {
    useTestNG()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

check.dependsOn 'jacocoTestReport'

publishing {
    publications {
        main(MavenPublication) {
            artifactId = 'dom4future'
            from components.java
            pom {
                name = 'dom4future'
                description = 'flexible XML framework for Java'
                url = 'https://github.com/DocFinity-CDS/dom4future'
                licenses {
                    license {
                        name = 'Plexus'
                        url = 'https://github.com/DocFinity-CDS/dom4future/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        name = 'DocFinity-CDS'
                        email = 'bmulhollem@docfinity.com'
                        url = 'https://github.com/DocFinity-CDS/'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/DocFinity-CDS/dom4future.git'
                    developerConnection = 'scm:git:ssh://github.com/DocFinity-CDS/dom4future.git'
                    url = 'https://github.com/DocFinity-CDS/dom4future.git'
                }

                withXml {
                    asNode().dependencies.dependency.findAll { xmlDep ->
                        xmlDep.appendNode('optional').value = 'true'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "ZIP"
            url = layout.buildDirectory.dir('bundle')
        }
    }
}

task getVersion {
    doFirst {
        System.out.println(System.getenv("VERSION"))
        System.out.println(version)
    }
}

task mavenZip(type: Zip) {
    dependsOn "publishMainPublicationToZIPRepository"
    archiveFileName.set("dom4future-v${version}.zip")
    destinationDirectory.set(layout.buildDirectory.dir('deliverables'))
    from layout.buildDirectory.dir('bundle')
    include "io/github/docfinity-cds/dom4future/${version}/*"
}

signing {
    required {true}
    sign publishing.publications.main
    useInMemoryPgpKeys(System.getenv('SIGNING_KEY'), System.getenv('SIGNING_PASSWORD'))
}